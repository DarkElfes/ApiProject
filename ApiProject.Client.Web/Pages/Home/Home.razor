@page "/"
@using ApiProject.Shared.Cases.Response

@attribute [Authorize]

<MudStack AlignItems="AlignItems.Center">
    @if (isLoading)
    {
        <MudProgressCircular Indeterminate Color="Color.Primary" />
    }
    else
    {
        if (phoneCases.Count == 0)
        {
            <MudText>Empty</MudText>
        }
        else
        {
            <MudGrid >
                @foreach (var phoneCase in phoneCases)
                {
                    <MudItem xs="6" sm="6" md="4" lg="3">
                        <ItemCard Item="phoneCase" />
                    </MudItem>
                }
            </MudGrid>
        }
    }
</MudStack>

<AuthorizeView Roles="Admin">
    <MudIconButton OnClick="CreateAsync"
    Style="position: absolute; right: 10px; top: 70px"
    Icon="@Icons.Material.Filled.Add"
    Size="Size.Large"
    Color="Color.Primary" />
</AuthorizeView>

@code {
    [Inject] public required NavigationManager Navigation { get; set; }
    [Inject] public required PhoneCaseService PhoneCaseService { get; set; }
    [Inject] public required IDialogService DialogService { get; set; }
    [Inject] public required ISnackbar Snackbar { get; set; }

    private short pageNumber = 1;
    private bool isLoading = true;
    private List<PhoneCaseResponse> phoneCases = null!;

    protected override async Task OnInitializedAsync()
    {
        var result = await PhoneCaseService.GetPage(pageNumber);

        if (result.IsSuccess)
        {
            phoneCases = result.Value.ToList();
        }
        else{
            Snackbar.Add(result.Errors.FirstOrDefault()!.Message, Severity.Error);
        }

        isLoading = false;
    }

    private async Task CreateAsync()
    {
        var dialog = await DialogService.ShowAsync<AddItemDialog>();
        var result = await dialog.Result;

        if (result is not null && !result.Canceled)
        {
            phoneCases.Add((PhoneCaseResponse)result.Data!);
        }
    }


}
